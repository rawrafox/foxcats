#!/usr/bin/env ruby

require "fileutils"
require "json"
require "nokogiri"
require "optparse"

Options = {
  input: "#{__dir__}/foxcats.json",
  svg: "#{__dir__}/svg",
  png: "#{__dir__}/png",
  avatars: true,
  thumbnails: true
}

OptionParser.new do |opts|
  opts.banner = "Usage: foxcat-generator [options]"

  opts.on("-s", "--svg SVG", "SVG output folder") do |v|
    Options[:svg] = v
  end

  opts.on("-p", "--png PNG", "PNG output folder") do |v|
    Options[:png] = v
  end

  opts.on("-a", "--[no-]avatars", "Generate PNG avatars") do |v|
    Options[:avatars] = v
  end

  opts.on("-t", "--[no-]thumbnails", "Generate PNG thumbnails") do |v|
    Options[:thumbnails] = v
  end
end.parse!

FileUtils.mkdir_p(Options[:svg])
FileUtils.mkdir_p(Options[:png] + "/128")
FileUtils.mkdir_p(Options[:png] + "/1024")

Document = <<-END
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
  xmlns="http://www.w3.org/2000/svg"
  xmlns:svg="http://www.w3.org/2000/svg"
  width="128px"
  height="128px"
  viewBox="0 0 750 750"
  style="shape-rendering: geometricPrecision">
</svg>
END

Stylesheet = <<-END
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" encoding="UTF-8" indent="yes" />
  <xsl:strip-space elements="*" />

  <xsl:template match="/">
    <xsl:copy-of select="." />
  </xsl:template>
</xsl:stylesheet>
END
  
XSLT = Nokogiri::XSLT.parse(Stylesheet)

ARGV.each do |filename|
  dirname = File.dirname(filename)

  json = JSON.parse(File.read(filename))
  name = json["name"]
  layers = json.fetch("layers")

  svg = Nokogiri::XML.parse(Document)

  g = svg.create_element("g", fill: "none")

  svg.root.add_child(svg.create_element("title", name)) if name
  svg.root.add_child(g)

  layers.each do |layer|
    g.add_child(Nokogiri::XML.fragment(File.read("#{dirname}/#{layer}")))
  end

  svg_path = "#{Options[:svg]}/#{name}.svg"

  File.write(svg_path, XSLT.transform(svg).to_s)

  system("svgexport #{svg_path} #{Options[:png]}/128/#{name}.png") if Options[:thumbnails]
  system("svgexport #{svg_path} #{Options[:png]}/1024/#{name}.png 1024:1024") if Options[:avatars]
end
